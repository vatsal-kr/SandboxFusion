[tool.poetry]
name = "sandbox"
version = "0.0.1"
description = ""
authors = [
    "liusiyao.sine <liusiyao.sine@bytedance.com>",
    "chenli.cxx <chenli.cxx@bytedance.com>",
    "xinshulin <xinshulin@bytedance.com>"
]
[tool.poetry.dependencies]
python = "^3.11"
pydantic = ">=2.4.0,<2.7.0"
fastapi = "^0.103.1"
uvicorn = {version = "0.25.0", extras = ["standard"]}
structlog = "^23.1.0"
psutil = "^5.9.8"
aiofiles = "^23.2.1"
aiohttp = "^3.9.5"
tenacity = "^8.4.2"
databases = { extras = ["aiomysql", "aiosqlite"], version = "^0.9.0" }
transformers = "^4.44.0"

[tool.poetry.group.dev.dependencies]
yapf = "^0.40.1"
isort = "^5.12.0"
pytest = "^7.4.2"
pytest-asyncio = "^0.23.2"
pytest-mock = "^3.11.1"
mypy = "^1.6.1"
pytest-cov = "^4.1.0"
pycln = "^2.3.0"
httpx = "^0.26.0"
numpy = "^2.0.0"
pytest-xdist = "^3.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.yapf]
based_on_style = "google"
column_limit = 120

[tool.isort]
profile = "hug"
line_length = 120
extend_skip_glob = ["sandbox/tests/*"]

[tool.pytest.ini_options]
addopts = """
-p no:logging
--cov=sandbox
--cov-report=xml:coverage.xml
--cov-report=term
--ignore=sandbox/tests/runners/samples
--ignore=scripts
"""
asyncio_mode = "auto"
filterwarnings = [
    "ignore::pytest.PytestUnraisableExceptionWarning",
]
markers = [
    "cuda: tests that requires gpu",
    "minor: tests of minor languages",
    "verilog: tests of verilog",
    "datalake: tests that requires online datalake access",
    "dp_eval: tests that uses external dp ada api"
]

[tool.coverage.run]
source = ["sandbox/*"]
omit = ["sandbox/tests/*"]

[tool.coverage.report]
exclude_also = ["@(abc\\.)?abstractmethod"]
ignore_errors = true

[tool.mypy]
ignore_missing_imports = true

[tool.pycln]
path = "sandbox/"
all = true
